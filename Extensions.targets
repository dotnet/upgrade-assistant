<Project>
  <PropertyGroup>
    <ExtensionDirectory>extensions\</ExtensionDirectory>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="@(Extension)">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <OutputItemType>_ExtensionProjectOutputItems</OutputItemType>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <Private>false</Private>
    </ProjectReference>
  </ItemGroup>
  
  <Target Name="AssignExtensionProjectTargetPaths" BeforeTargets="AssignTargetPaths">
    <ItemGroup>
      <_ExtensionProjectOutputItems Update="@(_ExtensionProjectOutputItems)">
        <TargetPath>$(ExtensionDirectory)%(_ExtensionProjectOutputItems.Name)\$([System.IO.Path]::GetFileName('%(Identity)'))</TargetPath>
        <RelativePath>$([System.IO.Path]::GetFileName('%(Identity)'))</RelativePath>
      </_ExtensionProjectOutputItems>
      <_ExtensionProjectReferenceExistent Include="@(_MSBuildProjectReferenceExistent)" Condition=" '%(_MSBuildProjectReferenceExistent.Name)' != '' " />
    </ItemGroup>

    <MSBuild
        Projects="@(_ExtensionProjectReferenceExistent)"
        Targets="PublishItemsOutputGroup"
        BuildInParallel="$(BuildInParallel)"
        Properties="%(_ExtensionProjectReferenceExistent.SetConfiguration); %(_ExtensionProjectReferenceExistent.SetPlatform); %(_ExtensionProjectReferenceExistent.SetTargetFramework)"
        Condition="'%(_ExtensionProjectReferenceExistent.Name)' != '' "
        ContinueOnError="$(ContinueOnError)"
        SkipNonexistentTargets="true"
        RemoveProperties="%(_ExtensionProjectReferenceExistent.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)">

      <Output TaskParameter="TargetOutputs" ItemName="_ExtensionProjectOutput"/>
    </MSBuild>

    <ItemGroup>
      <_AllExtensionProjectFilesContent Include="@(_ExtensionProjectOutput)">
        <TargetPath>$(ExtensionDirectory)%(_ExtensionProjectOutput.Name)\%(_ExtensionProjectOutput.TargetPath)</TargetPath>
        <RelativePath>%(_ExtensionProjectOutput.TargetPath)</RelativePath>
      </_AllExtensionProjectFilesContent>
      <_AllExtensionProjectFilesContent Include="@(_ExtensionProjectOutputItems)" />
    </ItemGroup>

    <ItemGroup>
      <!-- Create a collection of the extension files by their relative path while maintaining metadata -->
      <_ExtensionArtifactsByRelativePath Include="%(_AllExtensionProjectFilesContent.RelativePath)">
        <OriginalIdentity>%(Identity)</OriginalIdentity>
        <TargetPath>%(TargetPath)</TargetPath>
      </_ExtensionArtifactsByRelativePath>

      <!-- Remove the host supplied assemblies -->
      <_FilteredExtensionArtifactsMinusExclusions Include="@(_ExtensionArtifactsByRelativePath)" Exclude="@(_HostProvidedAssemblies)" />

      <!-- Transform the filtered list back to include the appropriate metadata to be added to -->
      <_FilteredExtensionArtifacts Include="%(_FilteredExtensionArtifactsMinusExclusions.OriginalIdentity)">
        <RelativePath>%(TargetPath)</RelativePath>
        <TargetPath>%(TargetPath)</TargetPath>
      </_FilteredExtensionArtifacts>
    </ItemGroup>

    <ItemGroup>
      <Content Include="@(_FilteredExtensionArtifacts)">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>

    <Message Text="Published extension %(Extension.Name)" Importance="high" Condition=" '%(Extension.Name)' != '' "/>
  </Target>

  <Target Name="GenerateHostProvidedAssemblies" BeforeTargets="AssignExtensionProjectTargetPaths">
    <ItemGroup>
      <_NotHostProvidedAssembly Include="Newtonsoft.Json.dll" />
    </ItemGroup>

    <!-- Create a list of all assemblies included by host and framework -->
    <ItemGroup>
      <_HostProvidedAssemblies Include="Microsoft.DotNet.UpgradeAssistant.Abstractions.dll" />
      <_HostProvidedAssemblies Include="Microsoft.DotNet.UpgradeAssistant.Abstractions.Internal.dll" />
      <_HostProvidedAssemblies Include="System.ComponentModel.Annotations.dll" />
      <_HostProvidedAssemblies Include="System.Memory.dll" />
      <_HostProvidedAssemblies Include="System.Numerics.Vectors.dll" />
      <_HostProvidedAssemblies Include="System.Reflection.Emit.dll" />
      <_HostProvidedAssemblies Include="System.Text.Encodings.Web.dll" />
      <_HostProvidedAssemblies Include="System.Threading.Tasks.Extensions.dll" />
      <_HostProvidedAssemblies Include="%(ReferenceCopyLocalPaths.DestinationSubPath)" />
      <_HostProvidedAssemblies Include="%(RuntimeCopyLocalItems.DestinationSubPath)" />
      <_HostProvidedAssemblies Remove="@(_NotHostProvidedAssembly)" />
    </ItemGroup>
  </Target>

  <Import Project="$(MSBuildThisFileDirectory)src\common\Microsoft.DotNet.UpgradeAssistant.Abstractions\build\Microsoft.DotNet.UpgradeAssistant.Abstractions.targets" />

</Project>