name: publish

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Workflow Run Id'
        required: true
      reason_to_run:
        description: 'Reason to run'
        required: true

jobs:
  upload:
    if: github.repository_owner == 'dotnet'
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:5.0
    env:
      RUN_ID: ${{ github.event.workflow_run.id }}

    steps:
    - name: Reason
      if: github.event.inputs.reason_to_run
      run: echo "${{ github.event.inputs.reason_to_run }}"
    - name: Set Variable for manual run
      if: ${{ github.event.inputs.run_id }}
      run: echo "RUN_ID=${{ github.event.inputs.run_id }}" >> $GITHUB_ENV
      
    # Manually handle this due to https://github.com/actions/download-artifact/issues/60
    - name: Download artifact
      uses: actions/github-script@v3
      with:
        script: |
          var artifacts = await github.actions.listWorkflowRunArtifacts({
             owner: context.repo.owner,
             repo: context.repo.repo,
             run_id: process.env.RUN_ID
          });
          var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
            return artifact.name == "tools"
          })[0];
          var download = await github.actions.downloadArtifact({
             owner: context.repo.owner,
             repo: context.repo.repo,
             artifact_id: matchArtifact.id,
             archive_format: 'zip'
          });
          var fs = require('fs');
          fs.writeFileSync('tools.zip', Buffer.from(download.data));
    - name: Unzip artifact
      run: |
        apt-get update && apt-get install -y unzip
        unzip tools.zip
    - name: Upload tool package
      run : |
        dotnet tool install -g sleet
        export PATH="$PATH:/github/home/.dotnet/tools"
        sleet push . --skip-existing
      env:
          SLEET_FEED_TYPE: azure
          SLEET_FEED_CONTAINER: feed
          SLEET_FEED_CONNECTIONSTRING: ${{ secrets.SLEET_CONNECTIONSTRING }}
