<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net5.0</TargetFramework>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <IsPackable>true</IsPackable>
    <PackAsTool>true</PackAsTool>
    <ToolCommandName>upgrade-assistant</ToolCommandName>
    <Description>A tool to assist developers in upgrading .NET Framework applications to .NET 5.</Description>
    <PackageId>upgrade-assistant</PackageId>
    <PackageIcon>icon.png</PackageIcon>
    <InstallTools>true</InstallTools>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Hosting" />
    <PackageReference Include="Serilog" />
    <PackageReference Include="Serilog.Extensions.Hosting" />
    <PackageReference Include="Serilog.Sinks.Console" />
    <PackageReference Include="Serilog.Sinks.File" />
    <PackageReference Include="System.CommandLine" />
  </ItemGroup>
  <ItemGroup>
    <!-- Explicitly reference packages that we do *not* want included in output
         paths in case transitive dependencies pull them in. These runtime
         assets are excluded because they are loaded from the version of MSBuild
         used by the tool, instead. They should, therefore, never show up in this
         tool's output.

         These are different from the MSBuild packages listed in
         Directory.Build.Targets because tests can use these NuGet packages (and
         the test harness needs to). However, no project (this one or tests) should
         use MSBuild runtime assets. -->
    <PackageReference Include="NuGet.Common" ExcludeAssets="runtime" />
    <PackageReference Include="NuGet.Configuration" ExcludeAssets="runtime" />
    <PackageReference Include="NuGet.DependencyResolver.Core" ExcludeAssets="runtime" />
    <PackageReference Include="NuGet.Frameworks" ExcludeAssets="runtime" />
    <PackageReference Include="NuGet.LibraryModel" ExcludeAssets="runtime" />
    <PackageReference Include="NuGet.Packaging" ExcludeAssets="runtime" />
    <PackageReference Include="NuGet.ProjectModel" ExcludeAssets="runtime" />
    <PackageReference Include="NuGet.Protocol" ExcludeAssets="runtime" />
    <PackageReference Include="NuGet.Versioning" ExcludeAssets="runtime" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\common\Microsoft.DotNet.UpgradeAssistant.Abstractions\Microsoft.DotNet.UpgradeAssistant.Abstractions.csproj" />
    <ProjectReference Include="..\..\steps\Microsoft.DotNet.UpgradeAssistant.Steps.Backup\Microsoft.DotNet.UpgradeAssistant.Steps.Backup.csproj" />
    <ProjectReference Include="..\..\components\Microsoft.DotNet.UpgradeAssistant\Microsoft.DotNet.UpgradeAssistant.csproj" />
    <ProjectReference Include="..\..\components\Microsoft.DotNet.UpgradeAssistant.MSBuild\Microsoft.DotNet.UpgradeAssistant.MSBuild.csproj" />
    <ProjectReference Include="..\..\components\Microsoft.DotNet.UpgradeAssistant.Portability\Microsoft.DotNet.UpgradeAssistant.Portability.csproj" />
    <ProjectReference Include="..\..\extensions\Microsoft.DotNet.UpgradeAssistant.Extensions\Microsoft.DotNet.UpgradeAssistant.Extensions.csproj" />
    <!-- This isn't used directly, but needs to be referenced so that the binary is available at runtime to be registered as an extension -->
    <ProjectReference Include="..\..\extensions\default\Microsoft.DotNet.UpgradeAssistant.Extensions.Default\Microsoft.DotNet.UpgradeAssistant.Extensions.Default.csproj" />
  </ItemGroup>

</Project>